name: CI

on:
  push:
   # Sequence of patterns matched against refs/tags
    tags:
      - '*'

jobs:
  build:
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
        working-directory: .
    steps:
      - uses: actions/checkout@v2

      - name: build utility
        run: |
          brew install bsdmake
          ./mfiutil.sh || true
          test -f dev/mfi/mfi_ioctl.h
          
      - name: build driver
        uses: sersoft-gmbh/xcodebuild-action@v1
        with:
          project: raid/SASMegaRAID.xcodeproj
          scheme: SASMegaRAID
          action: build
          derived-data-path: raid
          
      - name: test binaries
        run: |
          kextutil -n Build/Products/Release/SASMegaRAID.kext
          mfiutil/mfiutil || true
  
      - name: create archive
        run: zip -r SASMegaRAID.zip Build/Products/Release/SASMegaRAID.kext mfiutil/mfiutil

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: raid/SASMegaRAID.zip
          asset_name: SASMegaRAID.zip
          asset_content_type: application/zip
